security:

    # on définit l'encoder, c'est à dire que l'on définit dans quelle entité nous allons encoder une donnée et par quel type d'encodage 
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }

        in_database:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            # provider: users_in_memory

            # on définit par rapport à quel provider, quelles données de la BDD sont à comparer aux moments de la connexion
            provider: in_database

            #  On définit que la connexion s'établit via un formulaire de connexion
            form_login:
                login_path: security_login # on définit la route du formulaire de connexion
                check_path: security_login # on définit la route ou les données de connexion vont être comparés

            logout:
                path: security_logout
                target: blog

    #  on définit que l'utilisateur ADMIN est aussi un role ROLE_USER, il a donc accès a tout le site
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: ROLE_USER }

    # Si un membre possédant un role ROLE_USER en BDD et qu'il tente d'accéder au back office '/admin', on le redirige
    access_denied_url: blog
